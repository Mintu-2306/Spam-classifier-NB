# -*- coding: utf-8 -*-
"""Spam_detection _NB.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XKCIU5xpq1LfW7NHoatDA7SMrRqRtOlL
"""

import pandas as pd
import numpy as np

df=pd.read_csv('/content/spam.csv', encoding='latin-1')
df.head()

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

df = df.iloc[:, [0,1]] # Select the first and second columns regardless of their name
df.columns = ['label', 'text'] # Rename for consistency

# Convert labels to binary
df['label'] = df['label'].map({'ham': 0, 'spam': 1})
df.head()

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(df['text'], df['label'], test_size=0.2, random_state=42)

# Vectorize the text data
vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# Train Naive Bayes classifier
model = MultinomialNB()
model.fit(X_train_vec, y_train)

# Predict and evaluate
y_pred = model.predict(X_test_vec)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

import pickle

# Save the model and vectorizer
with open('naive_bayes_model.pkl', 'wb') as model_file:
    pickle.dump(model, model_file)

with open('count_vectorizer.pkl', 'wb') as vectorizer_file:
    pickle.dump(vectorizer, vectorizer_file)

print("Model and vectorizer saved successfully.")